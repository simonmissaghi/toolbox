@mixin font-size($sizeValue: 1.6) {
  font-size: ($sizeValue * 10) + px;
  font-size: $sizeValue + rem;
}

@mixin antialiasing( $type:antialiased ) {
    -webkit-font-smoothing: $type;
    font-smoothing: $type;
    font-smooth: always;
}

@mixin box-sizing($box-model) {
  -webkit-box-sizing: $box-model; // Safari <= 5
     -moz-box-sizing: $box-model; // Firefox <= 19
          box-sizing: $box-model;
}

@mixin text-hide() {
    font: 0/0 a;
    color: transparent;
    text-shadow: none;
    background-color: transparent;
    border: 0;
}

@mixin reset-text {
    font-family: $font-family-base; // We deliberately do NOT reset font-size or word-wrap.
    font-style: normal;
    font-weight: $font-weight-normal;
    letter-spacing: normal;
    line-break: auto;
    line-height: $line-height-base;
    text-align: left; // Fallback for where `start` is not supported
    text-align: start;
    text-decoration: none;
    text-shadow: none;
    text-transform: none;
    white-space: normal;
    word-break: normal;
    word-spacing: normal;
}

@mixin reset-ul {
    padding-left: 0;
    margin: 0;
    list-style: none;
}

@mixin clearfix() {
    &::after {
        display: block;
        content: "";
        clear: both;
    }
}

@mixin breakpoint($point) {
    @if $point==xxl {
        @media (min-width: 1400px) {
            @content ;
        }
    }
    @else if $point==xl {
        @media (min-width: 1200px) {
            @content ;
        }
    }
    @else if $point==md {
        @media (min-width: 992px) {
            @content ;
        }
    }
    @else if $point==sm {
        @media (min-width: 768px) {
            @content ;
        }
    }
}

@mixin linear-gradient($from, $to) {
    background-color: $to;
    background-image: -moz-linear-gradient($from, $to);
    background-image: -o-linear-gradient($from, $to);
    background-image: -webkit-linear-gradient(linear, left top, left bottom, color-stop(0, $from), color-stop(1, $to));
    background-image: -ms-linear-gradient($from, $to);
    background-image: linear-gradient($from, $to);
}

@mixin rounded($radius) {
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    border-radius: $radius;
}

@mixin btnDefault($x, $y) {
    padding: $y $x;
    outline: none;
    background: none;
    border: 1px solid black;

    &:hover {
        border: 1px solid #fff;
    }
}

@mixin calc($prop, $val) {
  @each $pre in -webkit-, -moz-, -o- {
    #{$prop}: $pre + calc(#{$val});
  }
  #{$prop}: calc(#{$val});
}

@mixin transition($what: all, $time: 0.2s, $how: ease-in-out) {
    -webkit-transition: $what $time $how;
    -moz-transition:    $what $time $how;
    -ms-transition:     $what $time $how;
    -o-transition:      $what $time $how;
    transition:         $what $time $how;
}

@mixin datestyle {
    font-size: 1.3rem;
    font-weight: 700;
    text-transform: uppercase;
}

@mixin box_shadow ($level) {

    @if $level == 1 {
        box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
    } @else if $level == 2 {
        box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);
    } @else if $level == 3 {
        box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
    } @else if $level == 4 {
        box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);
    } @else if $level == 5 {
        box-shadow: 0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);
    }

}

@mixin circle($size) {
  content: "";
  position: absolute;
  border-radius: 50%;
  left: calc(50% - #{$size/2});
  top: calc(50% - #{$size/2});
  width: $size;
  height: $size;
}

